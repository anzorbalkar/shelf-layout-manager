// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShelfLayoutManager.Infrastructure;

#nullable disable

namespace ShelfLayoutManager.Infrastructure.Migrations
{
    [DbContext(typeof(DbContext))]
    [Migration("20250519222437_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShelfLayoutManager.Infrastructure.CabinetEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<float>("Depth")
                        .HasColumnType("real");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.Property<float>("X")
                        .HasColumnType("real");

                    b.Property<float>("Y")
                        .HasColumnType("real");

                    b.Property<float>("Z")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Cabinets");
                });

            modelBuilder.Entity("ShelfLayoutManager.Infrastructure.LaneEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("JanCode")
                        .HasColumnType("text");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long?>("RowId")
                        .HasColumnType("bigint");

                    b.Property<float>("X")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RowId");

                    b.ToTable("Lanes");
                });

            modelBuilder.Entity("ShelfLayoutManager.Infrastructure.RowEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CabinetId")
                        .HasColumnType("bigint");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<float>("Z")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CabinetId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("ShelfLayoutManager.Infrastructure.SkuEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<float>("Depth")
                        .HasColumnType("real");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("JanCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameEn")
                        .HasColumnType("text");

                    b.Property<string>("NameJp")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Shape")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Volume")
                        .HasColumnType("real");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Skus");
                });

            modelBuilder.Entity("ShelfLayoutManager.Infrastructure.LaneEntity", b =>
                {
                    b.HasOne("ShelfLayoutManager.Infrastructure.RowEntity", "Row")
                        .WithMany("Lanes")
                        .HasForeignKey("RowId");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("ShelfLayoutManager.Infrastructure.RowEntity", b =>
                {
                    b.HasOne("ShelfLayoutManager.Infrastructure.CabinetEntity", "Cabinet")
                        .WithMany("Rows")
                        .HasForeignKey("CabinetId");

                    b.Navigation("Cabinet");
                });

            modelBuilder.Entity("ShelfLayoutManager.Infrastructure.CabinetEntity", b =>
                {
                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ShelfLayoutManager.Infrastructure.RowEntity", b =>
                {
                    b.Navigation("Lanes");
                });
#pragma warning restore 612, 618
        }
    }
}
